{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x6DbE28a420d7e1eD24348847492692d127821113",
    "txHash": "0x4bc3ec7be9dee983df68b908cec8715bd711a7d55c5e0a122e64d205353a1529"
  },
  "proxies": [
    {
      "address": "0x2adbFe0af7e31D8C6E3304b18BdF1074773B6C12",
      "txHash": "0x0c9f339d2f3acb5684a2fe2b1bd7fd7181e00cfe51bae21ca2ed634e14a70e62",
      "kind": "transparent"
    },
    {
      "address": "0x6e84B41f5A2Ea210909288CFCd054a0B9916FF45",
      "txHash": "0x460ced2812ba5fd30ea4f4d687eb177a6b86837aee70b4beef7473e6a7e23f2c",
      "kind": "transparent"
    },
    {
      "address": "0xe37f3508CE34696fF8CCaCAd3e28677af25c0799",
      "txHash": "0xf8ddbbb3e63f445092b730b6f076de022698f98d30d01f811f5ccd3851b080b5",
      "kind": "transparent"
    },
    {
      "address": "0xA8E8ea728A4c504aAF9090fE3E03c15b4B243B79",
      "txHash": "0x0c58021dbd315138afdfec746245fa4271c2b4036d585b0d36e7f119e748c492",
      "kind": "transparent"
    },
    {
      "address": "0xF14B94e69D745739856AABd7CE2F22824c5349b9",
      "txHash": "0x2a1e7ab7429d77542048bbfe30aeb5314ea78a0eff5712118b45cbf4890caae2",
      "kind": "transparent"
    },
    {
      "address": "0xcC98146E9Cba33A799dcD79fBBc5f98d1eFcC78b",
      "txHash": "0x5ff85c07ed7d03747e06977dbf676df02ce597b8ede1d55bd4ca89bd59777458",
      "kind": "transparent"
    }
  ],
  "impls": {
    "6436f3b2ce8e1b1c0dc8eddb6680893621bdf685738cd60200316daca7300728": {
      "address": "0xF678b4cC1d2CeB2b63f733a4C1FadA9f5c7Abf4A",
      "txHash": "0xe11cdf1adc1fdeed417d89d8b10a2f902848ec8757891a5d88bc25c43985cb18",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../app/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../app/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../app/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../app/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../app/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "LINK",
            "type": "t_contract(LinkTokenInterface)144",
            "src": "../app/project:/contracts/ProxySafeVRFConsumerBase.sol:87"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "../app/project:/contracts/ProxySafeVRFConsumerBase.sol:88"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../app/project:/contracts/ProxySafeVRFConsumerBase.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rewardNFT",
            "type": "t_contract(IRewardNFT)4765",
            "src": "../app/project:/contracts/piggyGame.sol:25"
          },
          {
            "contract": "piggyGame",
            "label": "pancakeSwapRouter",
            "type": "t_contract(IUniswapV2Router02)4146",
            "src": "../app/project:/contracts/piggyGame.sol:28"
          },
          {
            "contract": "piggyGame",
            "label": "requests",
            "type": "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4785_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:38"
          },
          {
            "contract": "piggyGame",
            "label": "players",
            "type": "t_mapping(t_address,t_struct(Player)4815_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:56"
          },
          {
            "contract": "piggyGame",
            "label": "teams",
            "type": "t_mapping(t_address,t_struct(Team)4827_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:65"
          },
          {
            "contract": "piggyGame",
            "label": "latestTeam",
            "type": "t_uint32",
            "src": "../app/project:/contracts/piggyGame.sol:67"
          },
          {
            "contract": "piggyGame",
            "label": "activeTeams",
            "type": "t_array(t_address)dyn_storage",
            "src": "../app/project:/contracts/piggyGame.sol:69"
          },
          {
            "contract": "piggyGame",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../app/project:/contracts/piggyGame.sol:72"
          },
          {
            "contract": "piggyGame",
            "label": "rewardPools",
            "type": "t_mapping(t_uint16,t_struct(RewardPool)4854_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:82"
          },
          {
            "contract": "piggyGame",
            "label": "thresholds",
            "type": "t_mapping(t_address,t_struct(Thresholds)4868_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rareChance",
            "type": "t_struct(RareChance)4880_storage",
            "src": "../app/project:/contracts/piggyGame.sol:99"
          },
          {
            "contract": "piggyGame",
            "label": "createdCards",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../app/project:/contracts/piggyGame.sol:101"
          },
          {
            "contract": "piggyGame",
            "label": "open",
            "type": "t_bool",
            "src": "../app/project:/contracts/piggyGame.sol:103"
          },
          {
            "contract": "piggyGame",
            "label": "season",
            "type": "t_uint16",
            "src": "../app/project:/contracts/piggyGame.sol:105"
          },
          {
            "contract": "piggyGame",
            "label": "joinFee",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:107"
          },
          {
            "contract": "piggyGame",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "../app/project:/contracts/piggyGame.sol:110"
          },
          {
            "contract": "piggyGame",
            "label": "fee",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:111"
          },
          {
            "contract": "piggyGame",
            "label": "devPool",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:114"
          },
          {
            "contract": "piggyGame",
            "label": "piggyAddress",
            "type": "t_address",
            "src": "../app/project:/contracts/piggyGame.sol:116"
          },
          {
            "contract": "piggyGame",
            "label": "minPiggy",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:117"
          },
          {
            "contract": "piggyGame",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:119"
          }
        ],
        "types": {
          "t_contract(IRewardNFT)4765": {
            "label": "contract IRewardNFT"
          },
          "t_contract(IUniswapV2Router02)4146": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4785_storage)": {
            "label": "mapping(bytes32 => struct piggyGame.ChainlinkRequest)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ChainlinkRequest)4785_storage": {
            "label": "struct piggyGame.ChainlinkRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address"
              },
              {
                "label": "fulfilled",
                "type": "t_bool"
              },
              {
                "label": "grades",
                "type": "t_array(t_uint8)dyn_storage"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Player)4815_storage)": {
            "label": "mapping(address => struct piggyGame.Player)"
          },
          "t_struct(Player)4815_storage": {
            "label": "struct piggyGame.Player",
            "members": [
              {
                "label": "gamesPlayed",
                "type": "t_uint256"
              },
              {
                "label": "season",
                "type": "t_uint16"
              },
              {
                "label": "team",
                "type": "t_address"
              },
              {
                "label": "winsBeforeJoin",
                "type": "t_uint32"
              },
              {
                "label": "experience",
                "type": "t_uint256"
              },
              {
                "label": "boosterPacks",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "numBoosterPacks",
                "type": "t_uint256"
              },
              {
                "label": "unclaimedPacks",
                "type": "t_array(t_uint8)dyn_storage"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_struct(Team)4827_storage)": {
            "label": "mapping(address => struct piggyGame.Team)"
          },
          "t_struct(Team)4827_storage": {
            "label": "struct piggyGame.Team",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "wins",
                "type": "t_uint32"
              },
              {
                "label": "damagePoints",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint16,t_struct(RewardPool)4854_storage)": {
            "label": "mapping(uint16 => struct piggyGame.RewardPool)"
          },
          "t_struct(RewardPool)4854_storage": {
            "label": "struct piggyGame.RewardPool",
            "members": [
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "remainingClaims",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerNFT",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "nftsClaimed",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_struct(Thresholds)4868_storage)": {
            "label": "mapping(address => struct piggyGame.Thresholds)"
          },
          "t_struct(Thresholds)4868_storage": {
            "label": "struct piggyGame.Thresholds",
            "members": [
              {
                "label": "grade1",
                "type": "t_uint256"
              },
              {
                "label": "grade2",
                "type": "t_uint256"
              },
              {
                "label": "grade3",
                "type": "t_uint256"
              },
              {
                "label": "grade4",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RareChance)4880_storage": {
            "label": "struct piggyGame.RareChance",
            "members": [
              {
                "label": "grade2",
                "type": "t_uint8"
              },
              {
                "label": "grade3",
                "type": "t_uint8"
              },
              {
                "label": "grade4",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_contract(LinkTokenInterface)144": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9396564e97eb3d5d191ae138f371e3760dc601172fa71c4454427ac5c4ffb4db": {
      "address": "0x1A0119BfB3690b1b016C0643f418032b363E6529",
      "txHash": "0x00ed4198600b577c6e944a2e4507ae51b1b1a168a082078f73e4a3ad955550a8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../app/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../app/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../app/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../app/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../app/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "LINK",
            "type": "t_contract(LinkTokenInterface)144",
            "src": "../app/project:/contracts/ProxySafeVRFConsumerBase.sol:87"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "../app/project:/contracts/ProxySafeVRFConsumerBase.sol:88"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../app/project:/contracts/ProxySafeVRFConsumerBase.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rewardNFT",
            "type": "t_contract(IRewardNFT)4765",
            "src": "../app/project:/contracts/piggyGame.sol:25"
          },
          {
            "contract": "piggyGame",
            "label": "pancakeSwapRouter",
            "type": "t_contract(IUniswapV2Router02)4146",
            "src": "../app/project:/contracts/piggyGame.sol:28"
          },
          {
            "contract": "piggyGame",
            "label": "requests",
            "type": "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4785_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:38"
          },
          {
            "contract": "piggyGame",
            "label": "players",
            "type": "t_mapping(t_address,t_struct(Player)4815_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:56"
          },
          {
            "contract": "piggyGame",
            "label": "teams",
            "type": "t_mapping(t_address,t_struct(Team)4827_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:65"
          },
          {
            "contract": "piggyGame",
            "label": "latestTeam",
            "type": "t_uint32",
            "src": "../app/project:/contracts/piggyGame.sol:67"
          },
          {
            "contract": "piggyGame",
            "label": "activeTeams",
            "type": "t_array(t_address)dyn_storage",
            "src": "../app/project:/contracts/piggyGame.sol:69"
          },
          {
            "contract": "piggyGame",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../app/project:/contracts/piggyGame.sol:72"
          },
          {
            "contract": "piggyGame",
            "label": "rewardPools",
            "type": "t_mapping(t_uint16,t_struct(RewardPool)4854_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:82"
          },
          {
            "contract": "piggyGame",
            "label": "thresholds",
            "type": "t_mapping(t_address,t_struct(Thresholds)4868_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rareChance",
            "type": "t_struct(RareChance)4880_storage",
            "src": "../app/project:/contracts/piggyGame.sol:99"
          },
          {
            "contract": "piggyGame",
            "label": "createdCards",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../app/project:/contracts/piggyGame.sol:101"
          },
          {
            "contract": "piggyGame",
            "label": "open",
            "type": "t_bool",
            "src": "../app/project:/contracts/piggyGame.sol:103"
          },
          {
            "contract": "piggyGame",
            "label": "season",
            "type": "t_uint16",
            "src": "../app/project:/contracts/piggyGame.sol:105"
          },
          {
            "contract": "piggyGame",
            "label": "joinFee",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:107"
          },
          {
            "contract": "piggyGame",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "../app/project:/contracts/piggyGame.sol:110"
          },
          {
            "contract": "piggyGame",
            "label": "fee",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:111"
          },
          {
            "contract": "piggyGame",
            "label": "devPool",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:114"
          },
          {
            "contract": "piggyGame",
            "label": "piggyAddress",
            "type": "t_address",
            "src": "../app/project:/contracts/piggyGame.sol:116"
          },
          {
            "contract": "piggyGame",
            "label": "minPiggy",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:117"
          },
          {
            "contract": "piggyGame",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:119"
          }
        ],
        "types": {
          "t_contract(IRewardNFT)4765": {
            "label": "contract IRewardNFT"
          },
          "t_contract(IUniswapV2Router02)4146": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4785_storage)": {
            "label": "mapping(bytes32 => struct piggyGame.ChainlinkRequest)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ChainlinkRequest)4785_storage": {
            "label": "struct piggyGame.ChainlinkRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address"
              },
              {
                "label": "fulfilled",
                "type": "t_bool"
              },
              {
                "label": "grades",
                "type": "t_array(t_uint8)dyn_storage"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Player)4815_storage)": {
            "label": "mapping(address => struct piggyGame.Player)"
          },
          "t_struct(Player)4815_storage": {
            "label": "struct piggyGame.Player",
            "members": [
              {
                "label": "gamesPlayed",
                "type": "t_uint256"
              },
              {
                "label": "season",
                "type": "t_uint16"
              },
              {
                "label": "team",
                "type": "t_address"
              },
              {
                "label": "winsBeforeJoin",
                "type": "t_uint32"
              },
              {
                "label": "experience",
                "type": "t_uint256"
              },
              {
                "label": "boosterPacks",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "numBoosterPacks",
                "type": "t_uint256"
              },
              {
                "label": "unclaimedPacks",
                "type": "t_array(t_uint8)dyn_storage"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_struct(Team)4827_storage)": {
            "label": "mapping(address => struct piggyGame.Team)"
          },
          "t_struct(Team)4827_storage": {
            "label": "struct piggyGame.Team",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "wins",
                "type": "t_uint32"
              },
              {
                "label": "damagePoints",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint16,t_struct(RewardPool)4854_storage)": {
            "label": "mapping(uint16 => struct piggyGame.RewardPool)"
          },
          "t_struct(RewardPool)4854_storage": {
            "label": "struct piggyGame.RewardPool",
            "members": [
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "remainingClaims",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerNFT",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "nftsClaimed",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_struct(Thresholds)4868_storage)": {
            "label": "mapping(address => struct piggyGame.Thresholds)"
          },
          "t_struct(Thresholds)4868_storage": {
            "label": "struct piggyGame.Thresholds",
            "members": [
              {
                "label": "grade1",
                "type": "t_uint256"
              },
              {
                "label": "grade2",
                "type": "t_uint256"
              },
              {
                "label": "grade3",
                "type": "t_uint256"
              },
              {
                "label": "grade4",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RareChance)4880_storage": {
            "label": "struct piggyGame.RareChance",
            "members": [
              {
                "label": "grade2",
                "type": "t_uint8"
              },
              {
                "label": "grade3",
                "type": "t_uint8"
              },
              {
                "label": "grade4",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_contract(LinkTokenInterface)144": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6bfdc66318a6ed39c053191e723362ee4679cde43f86868ba5466a7577fb5ab7": {
      "address": "0x132421f294144fd324e86c4d3CbcAa1D2034DE7E",
      "txHash": "0xcbacd18237f630745bf87312e4678a4be79138341fee279f6d35ba91a00a43a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../app/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../app/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../app/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../app/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../app/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "LINK",
            "type": "t_contract(LinkTokenInterface)144",
            "src": "../app/project:/contracts/ProxySafeVRFConsumerBase.sol:87"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "../app/project:/contracts/ProxySafeVRFConsumerBase.sol:88"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../app/project:/contracts/ProxySafeVRFConsumerBase.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rewardNFT",
            "type": "t_contract(IRewardNFT)4765",
            "src": "../app/project:/contracts/piggyGame.sol:25"
          },
          {
            "contract": "piggyGame",
            "label": "pancakeSwapRouter",
            "type": "t_contract(IUniswapV2Router02)4146",
            "src": "../app/project:/contracts/piggyGame.sol:28"
          },
          {
            "contract": "piggyGame",
            "label": "requests",
            "type": "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4785_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:38"
          },
          {
            "contract": "piggyGame",
            "label": "players",
            "type": "t_mapping(t_address,t_struct(Player)4815_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:56"
          },
          {
            "contract": "piggyGame",
            "label": "teams",
            "type": "t_mapping(t_address,t_struct(Team)4827_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:65"
          },
          {
            "contract": "piggyGame",
            "label": "latestTeam",
            "type": "t_uint32",
            "src": "../app/project:/contracts/piggyGame.sol:67"
          },
          {
            "contract": "piggyGame",
            "label": "activeTeams",
            "type": "t_array(t_address)dyn_storage",
            "src": "../app/project:/contracts/piggyGame.sol:69"
          },
          {
            "contract": "piggyGame",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../app/project:/contracts/piggyGame.sol:72"
          },
          {
            "contract": "piggyGame",
            "label": "rewardPools",
            "type": "t_mapping(t_uint16,t_struct(RewardPool)4854_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:82"
          },
          {
            "contract": "piggyGame",
            "label": "thresholds",
            "type": "t_mapping(t_address,t_struct(Thresholds)4868_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rareChance",
            "type": "t_struct(RareChance)4880_storage",
            "src": "../app/project:/contracts/piggyGame.sol:99"
          },
          {
            "contract": "piggyGame",
            "label": "createdCards",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../app/project:/contracts/piggyGame.sol:101"
          },
          {
            "contract": "piggyGame",
            "label": "open",
            "type": "t_bool",
            "src": "../app/project:/contracts/piggyGame.sol:103"
          },
          {
            "contract": "piggyGame",
            "label": "season",
            "type": "t_uint16",
            "src": "../app/project:/contracts/piggyGame.sol:105"
          },
          {
            "contract": "piggyGame",
            "label": "joinFee",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:107"
          },
          {
            "contract": "piggyGame",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "../app/project:/contracts/piggyGame.sol:110"
          },
          {
            "contract": "piggyGame",
            "label": "fee",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:111"
          },
          {
            "contract": "piggyGame",
            "label": "devPool",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:114"
          },
          {
            "contract": "piggyGame",
            "label": "piggyAddress",
            "type": "t_address",
            "src": "../app/project:/contracts/piggyGame.sol:116"
          },
          {
            "contract": "piggyGame",
            "label": "minPiggy",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:117"
          },
          {
            "contract": "piggyGame",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:119"
          }
        ],
        "types": {
          "t_contract(IRewardNFT)4765": {
            "label": "contract IRewardNFT"
          },
          "t_contract(IUniswapV2Router02)4146": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4785_storage)": {
            "label": "mapping(bytes32 => struct piggyGame.ChainlinkRequest)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ChainlinkRequest)4785_storage": {
            "label": "struct piggyGame.ChainlinkRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address"
              },
              {
                "label": "fulfilled",
                "type": "t_bool"
              },
              {
                "label": "grades",
                "type": "t_array(t_uint8)dyn_storage"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Player)4815_storage)": {
            "label": "mapping(address => struct piggyGame.Player)"
          },
          "t_struct(Player)4815_storage": {
            "label": "struct piggyGame.Player",
            "members": [
              {
                "label": "gamesPlayed",
                "type": "t_uint256"
              },
              {
                "label": "season",
                "type": "t_uint16"
              },
              {
                "label": "team",
                "type": "t_address"
              },
              {
                "label": "winsBeforeJoin",
                "type": "t_uint32"
              },
              {
                "label": "experience",
                "type": "t_uint256"
              },
              {
                "label": "boosterPacks",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "numBoosterPacks",
                "type": "t_uint256"
              },
              {
                "label": "unclaimedPacks",
                "type": "t_array(t_uint8)dyn_storage"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_struct(Team)4827_storage)": {
            "label": "mapping(address => struct piggyGame.Team)"
          },
          "t_struct(Team)4827_storage": {
            "label": "struct piggyGame.Team",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "wins",
                "type": "t_uint32"
              },
              {
                "label": "damagePoints",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint16,t_struct(RewardPool)4854_storage)": {
            "label": "mapping(uint16 => struct piggyGame.RewardPool)"
          },
          "t_struct(RewardPool)4854_storage": {
            "label": "struct piggyGame.RewardPool",
            "members": [
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "remainingClaims",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerNFT",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "nftsClaimed",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_struct(Thresholds)4868_storage)": {
            "label": "mapping(address => struct piggyGame.Thresholds)"
          },
          "t_struct(Thresholds)4868_storage": {
            "label": "struct piggyGame.Thresholds",
            "members": [
              {
                "label": "grade1",
                "type": "t_uint256"
              },
              {
                "label": "grade2",
                "type": "t_uint256"
              },
              {
                "label": "grade3",
                "type": "t_uint256"
              },
              {
                "label": "grade4",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RareChance)4880_storage": {
            "label": "struct piggyGame.RareChance",
            "members": [
              {
                "label": "grade2",
                "type": "t_uint8"
              },
              {
                "label": "grade3",
                "type": "t_uint8"
              },
              {
                "label": "grade4",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_contract(LinkTokenInterface)144": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d03d014f40b04ebe0a625551b970ef043626873bd05d54c078f634f568730f91": {
      "address": "0x8dB55657B23405d3DD75F32Af4B21B11F911D1CD",
      "txHash": "0x18336353524bc6cd8ea0512ebcbdd1d353174b0fee3a43750d9621a335807280",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../app/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../app/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../app/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../app/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../app/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "LINK",
            "type": "t_contract(LinkTokenInterface)144",
            "src": "../app/project:/contracts/ProxySafeVRFConsumerBase.sol:87"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "../app/project:/contracts/ProxySafeVRFConsumerBase.sol:88"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../app/project:/contracts/ProxySafeVRFConsumerBase.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rewardNFT",
            "type": "t_contract(IRewardNFT)4765",
            "src": "../app/project:/contracts/piggyGame.sol:25"
          },
          {
            "contract": "piggyGame",
            "label": "pancakeSwapRouter",
            "type": "t_contract(IUniswapV2Router02)4146",
            "src": "../app/project:/contracts/piggyGame.sol:28"
          },
          {
            "contract": "piggyGame",
            "label": "requests",
            "type": "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4785_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:38"
          },
          {
            "contract": "piggyGame",
            "label": "players",
            "type": "t_mapping(t_address,t_struct(Player)4815_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:56"
          },
          {
            "contract": "piggyGame",
            "label": "teams",
            "type": "t_mapping(t_address,t_struct(Team)4827_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:65"
          },
          {
            "contract": "piggyGame",
            "label": "latestTeam",
            "type": "t_uint32",
            "src": "../app/project:/contracts/piggyGame.sol:67"
          },
          {
            "contract": "piggyGame",
            "label": "activeTeams",
            "type": "t_array(t_address)dyn_storage",
            "src": "../app/project:/contracts/piggyGame.sol:69"
          },
          {
            "contract": "piggyGame",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../app/project:/contracts/piggyGame.sol:72"
          },
          {
            "contract": "piggyGame",
            "label": "rewardPools",
            "type": "t_mapping(t_uint16,t_struct(RewardPool)4854_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:82"
          },
          {
            "contract": "piggyGame",
            "label": "thresholds",
            "type": "t_mapping(t_address,t_struct(Thresholds)4868_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rareChance",
            "type": "t_struct(RareChance)4880_storage",
            "src": "../app/project:/contracts/piggyGame.sol:99"
          },
          {
            "contract": "piggyGame",
            "label": "createdCards",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../app/project:/contracts/piggyGame.sol:101"
          },
          {
            "contract": "piggyGame",
            "label": "open",
            "type": "t_bool",
            "src": "../app/project:/contracts/piggyGame.sol:103"
          },
          {
            "contract": "piggyGame",
            "label": "season",
            "type": "t_uint16",
            "src": "../app/project:/contracts/piggyGame.sol:105"
          },
          {
            "contract": "piggyGame",
            "label": "joinFee",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:107"
          },
          {
            "contract": "piggyGame",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "../app/project:/contracts/piggyGame.sol:110"
          },
          {
            "contract": "piggyGame",
            "label": "fee",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:111"
          },
          {
            "contract": "piggyGame",
            "label": "devPool",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:114"
          },
          {
            "contract": "piggyGame",
            "label": "piggyAddress",
            "type": "t_address",
            "src": "../app/project:/contracts/piggyGame.sol:116"
          },
          {
            "contract": "piggyGame",
            "label": "minPiggy",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:117"
          },
          {
            "contract": "piggyGame",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:119"
          }
        ],
        "types": {
          "t_contract(IRewardNFT)4765": {
            "label": "contract IRewardNFT"
          },
          "t_contract(IUniswapV2Router02)4146": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4785_storage)": {
            "label": "mapping(bytes32 => struct piggyGame.ChainlinkRequest)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ChainlinkRequest)4785_storage": {
            "label": "struct piggyGame.ChainlinkRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address"
              },
              {
                "label": "fulfilled",
                "type": "t_bool"
              },
              {
                "label": "grades",
                "type": "t_array(t_uint8)dyn_storage"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Player)4815_storage)": {
            "label": "mapping(address => struct piggyGame.Player)"
          },
          "t_struct(Player)4815_storage": {
            "label": "struct piggyGame.Player",
            "members": [
              {
                "label": "gamesPlayed",
                "type": "t_uint256"
              },
              {
                "label": "season",
                "type": "t_uint16"
              },
              {
                "label": "team",
                "type": "t_address"
              },
              {
                "label": "winsBeforeJoin",
                "type": "t_uint32"
              },
              {
                "label": "experience",
                "type": "t_uint256"
              },
              {
                "label": "boosterPacks",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "numBoosterPacks",
                "type": "t_uint256"
              },
              {
                "label": "unclaimedPacks",
                "type": "t_array(t_uint8)dyn_storage"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_struct(Team)4827_storage)": {
            "label": "mapping(address => struct piggyGame.Team)"
          },
          "t_struct(Team)4827_storage": {
            "label": "struct piggyGame.Team",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "wins",
                "type": "t_uint32"
              },
              {
                "label": "damagePoints",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint16,t_struct(RewardPool)4854_storage)": {
            "label": "mapping(uint16 => struct piggyGame.RewardPool)"
          },
          "t_struct(RewardPool)4854_storage": {
            "label": "struct piggyGame.RewardPool",
            "members": [
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "remainingClaims",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerNFT",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "nftsClaimed",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_struct(Thresholds)4868_storage)": {
            "label": "mapping(address => struct piggyGame.Thresholds)"
          },
          "t_struct(Thresholds)4868_storage": {
            "label": "struct piggyGame.Thresholds",
            "members": [
              {
                "label": "grade1",
                "type": "t_uint256"
              },
              {
                "label": "grade2",
                "type": "t_uint256"
              },
              {
                "label": "grade3",
                "type": "t_uint256"
              },
              {
                "label": "grade4",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RareChance)4880_storage": {
            "label": "struct piggyGame.RareChance",
            "members": [
              {
                "label": "grade2",
                "type": "t_uint8"
              },
              {
                "label": "grade3",
                "type": "t_uint8"
              },
              {
                "label": "grade4",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_contract(LinkTokenInterface)144": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "945c73668de5387f7bb7d36c2efc6c66467f5aaac2d0a121aa937b7400116ef8": {
      "address": "0xd4dabD526C72cb68bb627602B669d2a219f7cc86",
      "txHash": "0xe290e5eee1affad9102feef4cca4743ca6cd0cd1d3a309633c27b21ad2fddcda",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../app/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../app/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../app/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../app/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../app/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "LINK",
            "type": "t_contract(LinkTokenInterface)144",
            "src": "../app/project:/contracts/ProxySafeVRFConsumerBase.sol:87"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "../app/project:/contracts/ProxySafeVRFConsumerBase.sol:88"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../app/project:/contracts/ProxySafeVRFConsumerBase.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rewardNFT",
            "type": "t_contract(IRewardNFT)4765",
            "src": "../app/project:/contracts/piggyGame.sol:25"
          },
          {
            "contract": "piggyGame",
            "label": "pancakeSwapRouter",
            "type": "t_contract(IUniswapV2Router02)4146",
            "src": "../app/project:/contracts/piggyGame.sol:28"
          },
          {
            "contract": "piggyGame",
            "label": "requests",
            "type": "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4785_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:38"
          },
          {
            "contract": "piggyGame",
            "label": "players",
            "type": "t_mapping(t_address,t_struct(Player)4815_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:56"
          },
          {
            "contract": "piggyGame",
            "label": "teams",
            "type": "t_mapping(t_address,t_struct(Team)4827_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:65"
          },
          {
            "contract": "piggyGame",
            "label": "latestTeam",
            "type": "t_uint32",
            "src": "../app/project:/contracts/piggyGame.sol:67"
          },
          {
            "contract": "piggyGame",
            "label": "activeTeams",
            "type": "t_array(t_address)dyn_storage",
            "src": "../app/project:/contracts/piggyGame.sol:69"
          },
          {
            "contract": "piggyGame",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../app/project:/contracts/piggyGame.sol:72"
          },
          {
            "contract": "piggyGame",
            "label": "rewardPools",
            "type": "t_mapping(t_uint16,t_struct(RewardPool)4854_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:82"
          },
          {
            "contract": "piggyGame",
            "label": "thresholds",
            "type": "t_mapping(t_address,t_struct(Thresholds)4868_storage)",
            "src": "../app/project:/contracts/piggyGame.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rareChance",
            "type": "t_struct(RareChance)4880_storage",
            "src": "../app/project:/contracts/piggyGame.sol:99"
          },
          {
            "contract": "piggyGame",
            "label": "createdCards",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../app/project:/contracts/piggyGame.sol:101"
          },
          {
            "contract": "piggyGame",
            "label": "open",
            "type": "t_bool",
            "src": "../app/project:/contracts/piggyGame.sol:103"
          },
          {
            "contract": "piggyGame",
            "label": "season",
            "type": "t_uint16",
            "src": "../app/project:/contracts/piggyGame.sol:105"
          },
          {
            "contract": "piggyGame",
            "label": "joinFee",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:107"
          },
          {
            "contract": "piggyGame",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "../app/project:/contracts/piggyGame.sol:110"
          },
          {
            "contract": "piggyGame",
            "label": "fee",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:111"
          },
          {
            "contract": "piggyGame",
            "label": "devPool",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:114"
          },
          {
            "contract": "piggyGame",
            "label": "piggyAddress",
            "type": "t_address",
            "src": "../app/project:/contracts/piggyGame.sol:116"
          },
          {
            "contract": "piggyGame",
            "label": "minPiggy",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:117"
          },
          {
            "contract": "piggyGame",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "../app/project:/contracts/piggyGame.sol:119"
          }
        ],
        "types": {
          "t_contract(IRewardNFT)4765": {
            "label": "contract IRewardNFT"
          },
          "t_contract(IUniswapV2Router02)4146": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4785_storage)": {
            "label": "mapping(bytes32 => struct piggyGame.ChainlinkRequest)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ChainlinkRequest)4785_storage": {
            "label": "struct piggyGame.ChainlinkRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address"
              },
              {
                "label": "fulfilled",
                "type": "t_bool"
              },
              {
                "label": "grades",
                "type": "t_array(t_uint8)dyn_storage"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Player)4815_storage)": {
            "label": "mapping(address => struct piggyGame.Player)"
          },
          "t_struct(Player)4815_storage": {
            "label": "struct piggyGame.Player",
            "members": [
              {
                "label": "gamesPlayed",
                "type": "t_uint256"
              },
              {
                "label": "season",
                "type": "t_uint16"
              },
              {
                "label": "team",
                "type": "t_address"
              },
              {
                "label": "winsBeforeJoin",
                "type": "t_uint32"
              },
              {
                "label": "experience",
                "type": "t_uint256"
              },
              {
                "label": "boosterPacks",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "numBoosterPacks",
                "type": "t_uint256"
              },
              {
                "label": "unclaimedPacks",
                "type": "t_array(t_uint8)dyn_storage"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_struct(Team)4827_storage)": {
            "label": "mapping(address => struct piggyGame.Team)"
          },
          "t_struct(Team)4827_storage": {
            "label": "struct piggyGame.Team",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "wins",
                "type": "t_uint32"
              },
              {
                "label": "damagePoints",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint16,t_struct(RewardPool)4854_storage)": {
            "label": "mapping(uint16 => struct piggyGame.RewardPool)"
          },
          "t_struct(RewardPool)4854_storage": {
            "label": "struct piggyGame.RewardPool",
            "members": [
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "remainingClaims",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerNFT",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "nftsClaimed",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_struct(Thresholds)4868_storage)": {
            "label": "mapping(address => struct piggyGame.Thresholds)"
          },
          "t_struct(Thresholds)4868_storage": {
            "label": "struct piggyGame.Thresholds",
            "members": [
              {
                "label": "grade1",
                "type": "t_uint256"
              },
              {
                "label": "grade2",
                "type": "t_uint256"
              },
              {
                "label": "grade3",
                "type": "t_uint256"
              },
              {
                "label": "grade4",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RareChance)4880_storage": {
            "label": "struct piggyGame.RareChance",
            "members": [
              {
                "label": "grade2",
                "type": "t_uint8"
              },
              {
                "label": "grade3",
                "type": "t_uint8"
              },
              {
                "label": "grade4",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_contract(LinkTokenInterface)144": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
