{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x87eb73Ade3a0Ba1815bc6aF2Cb0312C92E1065d9",
    "txHash": "0x68307ded8a934a83e29ff50f44291512e730a5843a8ea44a124080ccf9614fd6"
  },
  "proxies": [
    {
      "address": "0xd843Bd907AAa4d8C310daA4373E4158EDedfD6e9",
      "txHash": "0x2ae8452f721c0b167c25865bbac00b70080604a5718d6b541d8a3360f375b967",
      "kind": "transparent"
    },
    {
      "address": "0x048F4Bea03d6d82A30DdFF29bf6B58f17Ad6B407",
      "txHash": "0xa46049f6f83b30bfdb44c2311b97822721acde654db567830d0437f0a735a807",
      "kind": "transparent"
    },
    {
      "address": "0x5de231149FA4c03C7222AC7bCa6e4e840A50178E",
      "txHash": "0xba03b7511e680f7e9f24424af95986e5c827969525831c1d3af3ce3a81583235",
      "kind": "transparent"
    }
  ],
  "impls": {
    "7dcf7eeddd21a26ef3d151e5e7832ca7f2e453baecaf3cbc67aada395ea5258a": {
      "address": "0x5F5656B4CE4C31dcBB7f4A2e70f250cF7b4eD608",
      "txHash": "0x78ef5c4c8f92775e0cb5a2198421f1888d257fe3a26fff6c5b1920ac3debeb3e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "LINK",
            "type": "t_contract(LinkTokenInterface)144",
            "src": "../project:/contracts/ProxySafeVRFConsumerBase.sol:87"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "../project:/contracts/ProxySafeVRFConsumerBase.sol:88"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/ProxySafeVRFConsumerBase.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rewardNFT",
            "type": "t_contract(IRewardNFT)4845",
            "src": "../project:/contracts/piggyGame.sol:25"
          },
          {
            "contract": "piggyGame",
            "label": "pancakeSwapRouter",
            "type": "t_contract(IUniswapV2Router02)4146",
            "src": "../project:/contracts/piggyGame.sol:28"
          },
          {
            "contract": "piggyGame",
            "label": "requests",
            "type": "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4865_storage)",
            "src": "../project:/contracts/piggyGame.sol:38"
          },
          {
            "contract": "piggyGame",
            "label": "players",
            "type": "t_mapping(t_address,t_struct(Player)4895_storage)",
            "src": "../project:/contracts/piggyGame.sol:56"
          },
          {
            "contract": "piggyGame",
            "label": "teams",
            "type": "t_mapping(t_address,t_struct(Team)4907_storage)",
            "src": "../project:/contracts/piggyGame.sol:65"
          },
          {
            "contract": "piggyGame",
            "label": "latestTeam",
            "type": "t_uint32",
            "src": "../project:/contracts/piggyGame.sol:67"
          },
          {
            "contract": "piggyGame",
            "label": "activeTeams",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/piggyGame.sol:69"
          },
          {
            "contract": "piggyGame",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/piggyGame.sol:72"
          },
          {
            "contract": "piggyGame",
            "label": "rewardPools",
            "type": "t_mapping(t_uint16,t_struct(RewardPool)4934_storage)",
            "src": "../project:/contracts/piggyGame.sol:82"
          },
          {
            "contract": "piggyGame",
            "label": "thresholds",
            "type": "t_mapping(t_address,t_struct(Thresholds)4948_storage)",
            "src": "../project:/contracts/piggyGame.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rareChance",
            "type": "t_struct(RareChance)4960_storage",
            "src": "../project:/contracts/piggyGame.sol:99"
          },
          {
            "contract": "piggyGame",
            "label": "createdCards",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/piggyGame.sol:101"
          },
          {
            "contract": "piggyGame",
            "label": "open",
            "type": "t_bool",
            "src": "../project:/contracts/piggyGame.sol:103"
          },
          {
            "contract": "piggyGame",
            "label": "season",
            "type": "t_uint16",
            "src": "../project:/contracts/piggyGame.sol:105"
          },
          {
            "contract": "piggyGame",
            "label": "joinFee",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:107"
          },
          {
            "contract": "piggyGame",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/piggyGame.sol:110"
          },
          {
            "contract": "piggyGame",
            "label": "fee",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:111"
          },
          {
            "contract": "piggyGame",
            "label": "devPool",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:114"
          },
          {
            "contract": "piggyGame",
            "label": "piggyAddress",
            "type": "t_address",
            "src": "../project:/contracts/piggyGame.sol:116"
          },
          {
            "contract": "piggyGame",
            "label": "minPiggy",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:117"
          },
          {
            "contract": "piggyGame",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:119"
          },
          {
            "contract": "piggyGame",
            "label": "feeDestination",
            "type": "t_address",
            "src": "../project:/contracts/piggyGame.sol:121"
          }
        ],
        "types": {
          "t_contract(IRewardNFT)4845": {
            "label": "contract IRewardNFT"
          },
          "t_contract(IUniswapV2Router02)4146": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4865_storage)": {
            "label": "mapping(bytes32 => struct piggyGame.ChainlinkRequest)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ChainlinkRequest)4865_storage": {
            "label": "struct piggyGame.ChainlinkRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address"
              },
              {
                "label": "fulfilled",
                "type": "t_bool"
              },
              {
                "label": "grades",
                "type": "t_array(t_uint8)dyn_storage"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Player)4895_storage)": {
            "label": "mapping(address => struct piggyGame.Player)"
          },
          "t_struct(Player)4895_storage": {
            "label": "struct piggyGame.Player",
            "members": [
              {
                "label": "gamesPlayed",
                "type": "t_uint256"
              },
              {
                "label": "season",
                "type": "t_uint16"
              },
              {
                "label": "team",
                "type": "t_address"
              },
              {
                "label": "winsBeforeJoin",
                "type": "t_uint32"
              },
              {
                "label": "experience",
                "type": "t_uint256"
              },
              {
                "label": "boosterPacks",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "numBoosterPacks",
                "type": "t_uint256"
              },
              {
                "label": "unclaimedPacks",
                "type": "t_array(t_uint8)dyn_storage"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_struct(Team)4907_storage)": {
            "label": "mapping(address => struct piggyGame.Team)"
          },
          "t_struct(Team)4907_storage": {
            "label": "struct piggyGame.Team",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "wins",
                "type": "t_uint32"
              },
              {
                "label": "damagePoints",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint16,t_struct(RewardPool)4934_storage)": {
            "label": "mapping(uint16 => struct piggyGame.RewardPool)"
          },
          "t_struct(RewardPool)4934_storage": {
            "label": "struct piggyGame.RewardPool",
            "members": [
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "remainingClaims",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerNFT",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "nftsClaimed",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_struct(Thresholds)4948_storage)": {
            "label": "mapping(address => struct piggyGame.Thresholds)"
          },
          "t_struct(Thresholds)4948_storage": {
            "label": "struct piggyGame.Thresholds",
            "members": [
              {
                "label": "grade1",
                "type": "t_uint256"
              },
              {
                "label": "grade2",
                "type": "t_uint256"
              },
              {
                "label": "grade3",
                "type": "t_uint256"
              },
              {
                "label": "grade4",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RareChance)4960_storage": {
            "label": "struct piggyGame.RareChance",
            "members": [
              {
                "label": "grade2",
                "type": "t_uint8"
              },
              {
                "label": "grade3",
                "type": "t_uint8"
              },
              {
                "label": "grade4",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_contract(LinkTokenInterface)144": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "09f324687d431781922ce95d7bbe05015d13c317e20c64a60325c59c8f9b9b8b": {
      "address": "0xD074265b013158B84E4e8eC7ade76c01f1A9e13a",
      "txHash": "0x440406fbbe9b4dbd9628c2d06e8aeebca9d6bfad26211c08eaa172b46dffd279",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "LINK",
            "type": "t_contract(LinkTokenInterface)144",
            "src": "../project:/contracts/ProxySafeVRFConsumerBase.sol:87"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "../project:/contracts/ProxySafeVRFConsumerBase.sol:88"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/ProxySafeVRFConsumerBase.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rewardNFT",
            "type": "t_contract(IRewardNFT)4845",
            "src": "../project:/contracts/piggyGame.sol:25"
          },
          {
            "contract": "piggyGame",
            "label": "pancakeSwapRouter",
            "type": "t_contract(IUniswapV2Router02)4146",
            "src": "../project:/contracts/piggyGame.sol:28"
          },
          {
            "contract": "piggyGame",
            "label": "requests",
            "type": "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4865_storage)",
            "src": "../project:/contracts/piggyGame.sol:38"
          },
          {
            "contract": "piggyGame",
            "label": "players",
            "type": "t_mapping(t_address,t_struct(Player)4895_storage)",
            "src": "../project:/contracts/piggyGame.sol:56"
          },
          {
            "contract": "piggyGame",
            "label": "teams",
            "type": "t_mapping(t_address,t_struct(Team)4907_storage)",
            "src": "../project:/contracts/piggyGame.sol:65"
          },
          {
            "contract": "piggyGame",
            "label": "latestTeam",
            "type": "t_uint32",
            "src": "../project:/contracts/piggyGame.sol:67"
          },
          {
            "contract": "piggyGame",
            "label": "activeTeams",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/piggyGame.sol:69"
          },
          {
            "contract": "piggyGame",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/piggyGame.sol:72"
          },
          {
            "contract": "piggyGame",
            "label": "rewardPools",
            "type": "t_mapping(t_uint16,t_struct(RewardPool)4934_storage)",
            "src": "../project:/contracts/piggyGame.sol:82"
          },
          {
            "contract": "piggyGame",
            "label": "thresholds",
            "type": "t_mapping(t_address,t_struct(Thresholds)4948_storage)",
            "src": "../project:/contracts/piggyGame.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rareChance",
            "type": "t_struct(RareChance)4960_storage",
            "src": "../project:/contracts/piggyGame.sol:99"
          },
          {
            "contract": "piggyGame",
            "label": "createdCards",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/piggyGame.sol:101"
          },
          {
            "contract": "piggyGame",
            "label": "open",
            "type": "t_bool",
            "src": "../project:/contracts/piggyGame.sol:103"
          },
          {
            "contract": "piggyGame",
            "label": "season",
            "type": "t_uint16",
            "src": "../project:/contracts/piggyGame.sol:105"
          },
          {
            "contract": "piggyGame",
            "label": "joinFee",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:107"
          },
          {
            "contract": "piggyGame",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/piggyGame.sol:110"
          },
          {
            "contract": "piggyGame",
            "label": "fee",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:111"
          },
          {
            "contract": "piggyGame",
            "label": "devPool",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:114"
          },
          {
            "contract": "piggyGame",
            "label": "piggyAddress",
            "type": "t_address",
            "src": "../project:/contracts/piggyGame.sol:116"
          },
          {
            "contract": "piggyGame",
            "label": "minPiggy",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:117"
          },
          {
            "contract": "piggyGame",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:119"
          },
          {
            "contract": "piggyGame",
            "label": "feeDestination",
            "type": "t_address",
            "src": "../project:/contracts/piggyGame.sol:121"
          }
        ],
        "types": {
          "t_contract(IRewardNFT)4845": {
            "label": "contract IRewardNFT"
          },
          "t_contract(IUniswapV2Router02)4146": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4865_storage)": {
            "label": "mapping(bytes32 => struct piggyGame.ChainlinkRequest)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ChainlinkRequest)4865_storage": {
            "label": "struct piggyGame.ChainlinkRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address"
              },
              {
                "label": "fulfilled",
                "type": "t_bool"
              },
              {
                "label": "grades",
                "type": "t_array(t_uint8)dyn_storage"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Player)4895_storage)": {
            "label": "mapping(address => struct piggyGame.Player)"
          },
          "t_struct(Player)4895_storage": {
            "label": "struct piggyGame.Player",
            "members": [
              {
                "label": "gamesPlayed",
                "type": "t_uint256"
              },
              {
                "label": "season",
                "type": "t_uint16"
              },
              {
                "label": "team",
                "type": "t_address"
              },
              {
                "label": "winsBeforeJoin",
                "type": "t_uint32"
              },
              {
                "label": "experience",
                "type": "t_uint256"
              },
              {
                "label": "boosterPacks",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "numBoosterPacks",
                "type": "t_uint256"
              },
              {
                "label": "unclaimedPacks",
                "type": "t_array(t_uint8)dyn_storage"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_struct(Team)4907_storage)": {
            "label": "mapping(address => struct piggyGame.Team)"
          },
          "t_struct(Team)4907_storage": {
            "label": "struct piggyGame.Team",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "wins",
                "type": "t_uint32"
              },
              {
                "label": "damagePoints",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint16,t_struct(RewardPool)4934_storage)": {
            "label": "mapping(uint16 => struct piggyGame.RewardPool)"
          },
          "t_struct(RewardPool)4934_storage": {
            "label": "struct piggyGame.RewardPool",
            "members": [
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "remainingClaims",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerNFT",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "nftsClaimed",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_struct(Thresholds)4948_storage)": {
            "label": "mapping(address => struct piggyGame.Thresholds)"
          },
          "t_struct(Thresholds)4948_storage": {
            "label": "struct piggyGame.Thresholds",
            "members": [
              {
                "label": "grade1",
                "type": "t_uint256"
              },
              {
                "label": "grade2",
                "type": "t_uint256"
              },
              {
                "label": "grade3",
                "type": "t_uint256"
              },
              {
                "label": "grade4",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RareChance)4960_storage": {
            "label": "struct piggyGame.RareChance",
            "members": [
              {
                "label": "grade2",
                "type": "t_uint8"
              },
              {
                "label": "grade3",
                "type": "t_uint8"
              },
              {
                "label": "grade4",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_contract(LinkTokenInterface)144": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a3b0dedc7fc674b3c79af5efb496e46fc0bb5a2d061c7d698ed973f339ef51c2": {
      "address": "0x96bdb9909E61c0F42B6e109DFeD31f762A3d9562",
      "txHash": "0x4908f092d480d050f8406045f23c4fff2f75d019906bd4b41f802abb2996c5ac",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "LINK",
            "type": "t_contract(LinkTokenInterface)144",
            "src": "../project:/contracts/ProxySafeVRFConsumerBase.sol:87"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "../project:/contracts/ProxySafeVRFConsumerBase.sol:88"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/ProxySafeVRFConsumerBase.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rewardNFT",
            "type": "t_contract(IRewardNFT)4845",
            "src": "../project:/contracts/piggyGame.sol:25"
          },
          {
            "contract": "piggyGame",
            "label": "pancakeSwapRouter",
            "type": "t_contract(IUniswapV2Router02)4146",
            "src": "../project:/contracts/piggyGame.sol:28"
          },
          {
            "contract": "piggyGame",
            "label": "requests",
            "type": "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4865_storage)",
            "src": "../project:/contracts/piggyGame.sol:38"
          },
          {
            "contract": "piggyGame",
            "label": "players",
            "type": "t_mapping(t_address,t_struct(Player)4895_storage)",
            "src": "../project:/contracts/piggyGame.sol:56"
          },
          {
            "contract": "piggyGame",
            "label": "teams",
            "type": "t_mapping(t_address,t_struct(Team)4907_storage)",
            "src": "../project:/contracts/piggyGame.sol:65"
          },
          {
            "contract": "piggyGame",
            "label": "latestTeam",
            "type": "t_uint32",
            "src": "../project:/contracts/piggyGame.sol:67"
          },
          {
            "contract": "piggyGame",
            "label": "activeTeams",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/piggyGame.sol:69"
          },
          {
            "contract": "piggyGame",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/piggyGame.sol:72"
          },
          {
            "contract": "piggyGame",
            "label": "rewardPools",
            "type": "t_mapping(t_uint16,t_struct(RewardPool)4934_storage)",
            "src": "../project:/contracts/piggyGame.sol:82"
          },
          {
            "contract": "piggyGame",
            "label": "thresholds",
            "type": "t_mapping(t_address,t_struct(Thresholds)4948_storage)",
            "src": "../project:/contracts/piggyGame.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rareChance",
            "type": "t_struct(RareChance)4960_storage",
            "src": "../project:/contracts/piggyGame.sol:99"
          },
          {
            "contract": "piggyGame",
            "label": "createdCards",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/piggyGame.sol:101"
          },
          {
            "contract": "piggyGame",
            "label": "open",
            "type": "t_bool",
            "src": "../project:/contracts/piggyGame.sol:103"
          },
          {
            "contract": "piggyGame",
            "label": "season",
            "type": "t_uint16",
            "src": "../project:/contracts/piggyGame.sol:105"
          },
          {
            "contract": "piggyGame",
            "label": "joinFee",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:107"
          },
          {
            "contract": "piggyGame",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/piggyGame.sol:110"
          },
          {
            "contract": "piggyGame",
            "label": "fee",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:111"
          },
          {
            "contract": "piggyGame",
            "label": "devPool",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:114"
          },
          {
            "contract": "piggyGame",
            "label": "piggyAddress",
            "type": "t_address",
            "src": "../project:/contracts/piggyGame.sol:116"
          },
          {
            "contract": "piggyGame",
            "label": "minPiggy",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:117"
          },
          {
            "contract": "piggyGame",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:119"
          },
          {
            "contract": "piggyGame",
            "label": "feeDestination",
            "type": "t_address",
            "src": "../project:/contracts/piggyGame.sol:121"
          }
        ],
        "types": {
          "t_contract(IRewardNFT)4845": {
            "label": "contract IRewardNFT"
          },
          "t_contract(IUniswapV2Router02)4146": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4865_storage)": {
            "label": "mapping(bytes32 => struct piggyGame.ChainlinkRequest)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ChainlinkRequest)4865_storage": {
            "label": "struct piggyGame.ChainlinkRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address"
              },
              {
                "label": "fulfilled",
                "type": "t_bool"
              },
              {
                "label": "grades",
                "type": "t_array(t_uint8)dyn_storage"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Player)4895_storage)": {
            "label": "mapping(address => struct piggyGame.Player)"
          },
          "t_struct(Player)4895_storage": {
            "label": "struct piggyGame.Player",
            "members": [
              {
                "label": "gamesPlayed",
                "type": "t_uint256"
              },
              {
                "label": "season",
                "type": "t_uint16"
              },
              {
                "label": "team",
                "type": "t_address"
              },
              {
                "label": "winsBeforeJoin",
                "type": "t_uint32"
              },
              {
                "label": "experience",
                "type": "t_uint256"
              },
              {
                "label": "boosterPacks",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "numBoosterPacks",
                "type": "t_uint256"
              },
              {
                "label": "unclaimedPacks",
                "type": "t_array(t_uint8)dyn_storage"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_struct(Team)4907_storage)": {
            "label": "mapping(address => struct piggyGame.Team)"
          },
          "t_struct(Team)4907_storage": {
            "label": "struct piggyGame.Team",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "wins",
                "type": "t_uint32"
              },
              {
                "label": "damagePoints",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint16,t_struct(RewardPool)4934_storage)": {
            "label": "mapping(uint16 => struct piggyGame.RewardPool)"
          },
          "t_struct(RewardPool)4934_storage": {
            "label": "struct piggyGame.RewardPool",
            "members": [
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "remainingClaims",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerNFT",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "nftsClaimed",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_struct(Thresholds)4948_storage)": {
            "label": "mapping(address => struct piggyGame.Thresholds)"
          },
          "t_struct(Thresholds)4948_storage": {
            "label": "struct piggyGame.Thresholds",
            "members": [
              {
                "label": "grade1",
                "type": "t_uint256"
              },
              {
                "label": "grade2",
                "type": "t_uint256"
              },
              {
                "label": "grade3",
                "type": "t_uint256"
              },
              {
                "label": "grade4",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RareChance)4960_storage": {
            "label": "struct piggyGame.RareChance",
            "members": [
              {
                "label": "grade2",
                "type": "t_uint8"
              },
              {
                "label": "grade3",
                "type": "t_uint8"
              },
              {
                "label": "grade4",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_contract(LinkTokenInterface)144": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0ab096499e4b4b738665c091820f84b8d72de61f9d753ff0304382a9426d68db": {
      "address": "0xdC9d530552efD566C2B0EB1AF151d738264B7349",
      "txHash": "0x7dd6fd7aa34947fec82cd277e31ae3b4626909797c43abe6e421970beacf1363",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "LINK",
            "type": "t_contract(LinkTokenInterface)144",
            "src": "../project:/contracts/ProxySafeVRFConsumerBase.sol:87"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "../project:/contracts/ProxySafeVRFConsumerBase.sol:88"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/ProxySafeVRFConsumerBase.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rewardNFT",
            "type": "t_contract(IRewardNFT)4845",
            "src": "../project:/contracts/piggyGame.sol:25"
          },
          {
            "contract": "piggyGame",
            "label": "pancakeSwapRouter",
            "type": "t_contract(IUniswapV2Router02)4146",
            "src": "../project:/contracts/piggyGame.sol:28"
          },
          {
            "contract": "piggyGame",
            "label": "requests",
            "type": "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4865_storage)",
            "src": "../project:/contracts/piggyGame.sol:38"
          },
          {
            "contract": "piggyGame",
            "label": "players",
            "type": "t_mapping(t_address,t_struct(Player)4895_storage)",
            "src": "../project:/contracts/piggyGame.sol:56"
          },
          {
            "contract": "piggyGame",
            "label": "teams",
            "type": "t_mapping(t_address,t_struct(Team)4907_storage)",
            "src": "../project:/contracts/piggyGame.sol:65"
          },
          {
            "contract": "piggyGame",
            "label": "latestTeam",
            "type": "t_uint32",
            "src": "../project:/contracts/piggyGame.sol:67"
          },
          {
            "contract": "piggyGame",
            "label": "activeTeams",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/piggyGame.sol:69"
          },
          {
            "contract": "piggyGame",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/piggyGame.sol:72"
          },
          {
            "contract": "piggyGame",
            "label": "rewardPools",
            "type": "t_mapping(t_uint16,t_struct(RewardPool)4934_storage)",
            "src": "../project:/contracts/piggyGame.sol:82"
          },
          {
            "contract": "piggyGame",
            "label": "thresholds",
            "type": "t_mapping(t_address,t_struct(Thresholds)4948_storage)",
            "src": "../project:/contracts/piggyGame.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rareChance",
            "type": "t_struct(RareChance)4960_storage",
            "src": "../project:/contracts/piggyGame.sol:99"
          },
          {
            "contract": "piggyGame",
            "label": "createdCards",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/piggyGame.sol:101"
          },
          {
            "contract": "piggyGame",
            "label": "open",
            "type": "t_bool",
            "src": "../project:/contracts/piggyGame.sol:103"
          },
          {
            "contract": "piggyGame",
            "label": "season",
            "type": "t_uint16",
            "src": "../project:/contracts/piggyGame.sol:105"
          },
          {
            "contract": "piggyGame",
            "label": "joinFee",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:107"
          },
          {
            "contract": "piggyGame",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/piggyGame.sol:110"
          },
          {
            "contract": "piggyGame",
            "label": "fee",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:111"
          },
          {
            "contract": "piggyGame",
            "label": "devPool",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:114"
          },
          {
            "contract": "piggyGame",
            "label": "piggyAddress",
            "type": "t_address",
            "src": "../project:/contracts/piggyGame.sol:116"
          },
          {
            "contract": "piggyGame",
            "label": "minPiggy",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:117"
          },
          {
            "contract": "piggyGame",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:119"
          },
          {
            "contract": "piggyGame",
            "label": "feeDestination",
            "type": "t_address",
            "src": "../project:/contracts/piggyGame.sol:121"
          }
        ],
        "types": {
          "t_contract(IRewardNFT)4845": {
            "label": "contract IRewardNFT"
          },
          "t_contract(IUniswapV2Router02)4146": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4865_storage)": {
            "label": "mapping(bytes32 => struct piggyGame.ChainlinkRequest)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ChainlinkRequest)4865_storage": {
            "label": "struct piggyGame.ChainlinkRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address"
              },
              {
                "label": "fulfilled",
                "type": "t_bool"
              },
              {
                "label": "grades",
                "type": "t_array(t_uint8)dyn_storage"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Player)4895_storage)": {
            "label": "mapping(address => struct piggyGame.Player)"
          },
          "t_struct(Player)4895_storage": {
            "label": "struct piggyGame.Player",
            "members": [
              {
                "label": "gamesPlayed",
                "type": "t_uint256"
              },
              {
                "label": "season",
                "type": "t_uint16"
              },
              {
                "label": "team",
                "type": "t_address"
              },
              {
                "label": "winsBeforeJoin",
                "type": "t_uint32"
              },
              {
                "label": "experience",
                "type": "t_uint256"
              },
              {
                "label": "boosterPacks",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "numBoosterPacks",
                "type": "t_uint256"
              },
              {
                "label": "unclaimedPacks",
                "type": "t_array(t_uint8)dyn_storage"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_struct(Team)4907_storage)": {
            "label": "mapping(address => struct piggyGame.Team)"
          },
          "t_struct(Team)4907_storage": {
            "label": "struct piggyGame.Team",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "wins",
                "type": "t_uint32"
              },
              {
                "label": "damagePoints",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint16,t_struct(RewardPool)4934_storage)": {
            "label": "mapping(uint16 => struct piggyGame.RewardPool)"
          },
          "t_struct(RewardPool)4934_storage": {
            "label": "struct piggyGame.RewardPool",
            "members": [
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "remainingClaims",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerNFT",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "nftsClaimed",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_struct(Thresholds)4948_storage)": {
            "label": "mapping(address => struct piggyGame.Thresholds)"
          },
          "t_struct(Thresholds)4948_storage": {
            "label": "struct piggyGame.Thresholds",
            "members": [
              {
                "label": "grade1",
                "type": "t_uint256"
              },
              {
                "label": "grade2",
                "type": "t_uint256"
              },
              {
                "label": "grade3",
                "type": "t_uint256"
              },
              {
                "label": "grade4",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RareChance)4960_storage": {
            "label": "struct piggyGame.RareChance",
            "members": [
              {
                "label": "grade2",
                "type": "t_uint8"
              },
              {
                "label": "grade3",
                "type": "t_uint8"
              },
              {
                "label": "grade4",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_contract(LinkTokenInterface)144": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "22fa36338578a4cfe99efaac94efc82fb9acf8cb0c6592aceff4b2b2a2d09122": {
      "address": "0x9bA6C1fdF3e22a1d856Dbf64105f1Ffa0e2d2d80",
      "txHash": "0xd0e653cd7e794ee8a4452a0a514959b92f3f5870381c049c414dc947d2d5ffb8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "LINK",
            "type": "t_contract(LinkTokenInterface)144",
            "src": "../project:/contracts/ProxySafeVRFConsumerBase.sol:87"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "../project:/contracts/ProxySafeVRFConsumerBase.sol:88"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/ProxySafeVRFConsumerBase.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rewardNFT",
            "type": "t_contract(IRewardNFT)4916",
            "src": "../project:/contracts/piggyGame.sol:25"
          },
          {
            "contract": "piggyGame",
            "label": "pancakeSwapRouter",
            "type": "t_contract(IUniswapV2Router02)4146",
            "src": "../project:/contracts/piggyGame.sol:28"
          },
          {
            "contract": "piggyGame",
            "label": "requests",
            "type": "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4936_storage)",
            "src": "../project:/contracts/piggyGame.sol:38"
          },
          {
            "contract": "piggyGame",
            "label": "players",
            "type": "t_mapping(t_address,t_struct(Player)4966_storage)",
            "src": "../project:/contracts/piggyGame.sol:56"
          },
          {
            "contract": "piggyGame",
            "label": "teams",
            "type": "t_mapping(t_address,t_struct(Team)4978_storage)",
            "src": "../project:/contracts/piggyGame.sol:65"
          },
          {
            "contract": "piggyGame",
            "label": "latestTeam",
            "type": "t_uint32",
            "src": "../project:/contracts/piggyGame.sol:67"
          },
          {
            "contract": "piggyGame",
            "label": "activeTeams",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/piggyGame.sol:69"
          },
          {
            "contract": "piggyGame",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/piggyGame.sol:72"
          },
          {
            "contract": "piggyGame",
            "label": "rewardPools",
            "type": "t_mapping(t_uint16,t_struct(RewardPool)5005_storage)",
            "src": "../project:/contracts/piggyGame.sol:82"
          },
          {
            "contract": "piggyGame",
            "label": "thresholds",
            "type": "t_mapping(t_address,t_struct(Thresholds)5019_storage)",
            "src": "../project:/contracts/piggyGame.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rareChance",
            "type": "t_struct(RareChance)5031_storage",
            "src": "../project:/contracts/piggyGame.sol:99"
          },
          {
            "contract": "piggyGame",
            "label": "createdCards",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/piggyGame.sol:101"
          },
          {
            "contract": "piggyGame",
            "label": "open",
            "type": "t_bool",
            "src": "../project:/contracts/piggyGame.sol:103"
          },
          {
            "contract": "piggyGame",
            "label": "season",
            "type": "t_uint16",
            "src": "../project:/contracts/piggyGame.sol:105"
          },
          {
            "contract": "piggyGame",
            "label": "joinFee",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:107"
          },
          {
            "contract": "piggyGame",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/piggyGame.sol:110"
          },
          {
            "contract": "piggyGame",
            "label": "fee",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:111"
          },
          {
            "contract": "piggyGame",
            "label": "devPool",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:114"
          },
          {
            "contract": "piggyGame",
            "label": "piggyAddress",
            "type": "t_address",
            "src": "../project:/contracts/piggyGame.sol:116"
          },
          {
            "contract": "piggyGame",
            "label": "minPiggy",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:117"
          },
          {
            "contract": "piggyGame",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "../project:/contracts/piggyGame.sol:119"
          },
          {
            "contract": "piggyGame",
            "label": "feeDestination",
            "type": "t_address",
            "src": "../project:/contracts/piggyGame.sol:121"
          }
        ],
        "types": {
          "t_contract(IRewardNFT)4916": {
            "label": "contract IRewardNFT"
          },
          "t_contract(IUniswapV2Router02)4146": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4936_storage)": {
            "label": "mapping(bytes32 => struct piggyGame.ChainlinkRequest)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ChainlinkRequest)4936_storage": {
            "label": "struct piggyGame.ChainlinkRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address"
              },
              {
                "label": "fulfilled",
                "type": "t_bool"
              },
              {
                "label": "grades",
                "type": "t_array(t_uint8)dyn_storage"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Player)4966_storage)": {
            "label": "mapping(address => struct piggyGame.Player)"
          },
          "t_struct(Player)4966_storage": {
            "label": "struct piggyGame.Player",
            "members": [
              {
                "label": "gamesPlayed",
                "type": "t_uint256"
              },
              {
                "label": "season",
                "type": "t_uint16"
              },
              {
                "label": "team",
                "type": "t_address"
              },
              {
                "label": "winsBeforeJoin",
                "type": "t_uint32"
              },
              {
                "label": "experience",
                "type": "t_uint256"
              },
              {
                "label": "boosterPacks",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "numBoosterPacks",
                "type": "t_uint256"
              },
              {
                "label": "unclaimedPacks",
                "type": "t_array(t_uint8)dyn_storage"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_struct(Team)4978_storage)": {
            "label": "mapping(address => struct piggyGame.Team)"
          },
          "t_struct(Team)4978_storage": {
            "label": "struct piggyGame.Team",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "wins",
                "type": "t_uint32"
              },
              {
                "label": "damagePoints",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint16,t_struct(RewardPool)5005_storage)": {
            "label": "mapping(uint16 => struct piggyGame.RewardPool)"
          },
          "t_struct(RewardPool)5005_storage": {
            "label": "struct piggyGame.RewardPool",
            "members": [
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "remainingClaims",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerNFT",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "nftsClaimed",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_struct(Thresholds)5019_storage)": {
            "label": "mapping(address => struct piggyGame.Thresholds)"
          },
          "t_struct(Thresholds)5019_storage": {
            "label": "struct piggyGame.Thresholds",
            "members": [
              {
                "label": "grade1",
                "type": "t_uint256"
              },
              {
                "label": "grade2",
                "type": "t_uint256"
              },
              {
                "label": "grade3",
                "type": "t_uint256"
              },
              {
                "label": "grade4",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RareChance)5031_storage": {
            "label": "struct piggyGame.RareChance",
            "members": [
              {
                "label": "grade2",
                "type": "t_uint8"
              },
              {
                "label": "grade3",
                "type": "t_uint8"
              },
              {
                "label": "grade4",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_contract(LinkTokenInterface)144": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ff252da6ee7ac2fac83e0fcac2d90eb82b428efec58676192ae73c51c0ce440b": {
      "address": "0x930B5D885FAA9Ac4B8038fd14C91b4156ba38352",
      "txHash": "0x811092b05cb03e17a7a270fac04b14298ac414207ef1ec4e98a321a72063f0b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "LINK",
            "type": "t_contract(LinkTokenInterface)3356",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\ProxySafeVRFConsumerBase.sol:87"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\ProxySafeVRFConsumerBase.sol:88"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\ProxySafeVRFConsumerBase.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rewardNFT",
            "type": "t_contract(IRewardNFT)769",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:25"
          },
          {
            "contract": "piggyGame",
            "label": "pancakeSwapRouter",
            "type": "t_contract(IUniswapV2Router02)7358",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:28"
          },
          {
            "contract": "piggyGame",
            "label": "requests",
            "type": "t_mapping(t_bytes32,t_struct(ChainlinkRequest)789_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:38"
          },
          {
            "contract": "piggyGame",
            "label": "players",
            "type": "t_mapping(t_address,t_struct(Player)819_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:56"
          },
          {
            "contract": "piggyGame",
            "label": "teams",
            "type": "t_mapping(t_address,t_struct(Team)831_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:65"
          },
          {
            "contract": "piggyGame",
            "label": "activeTeams",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:67"
          },
          {
            "contract": "piggyGame",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:70"
          },
          {
            "contract": "piggyGame",
            "label": "rewardPools",
            "type": "t_mapping(t_uint16,t_struct(RewardPool)856_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:80"
          },
          {
            "contract": "piggyGame",
            "label": "rewardThresholds",
            "type": "t_struct(Thresholds)870_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:90"
          },
          {
            "contract": "piggyGame",
            "label": "rareChance",
            "type": "t_struct(RareChance)880_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:97"
          },
          {
            "contract": "piggyGame",
            "label": "createdCards",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:99"
          },
          {
            "contract": "piggyGame",
            "label": "open",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:101"
          },
          {
            "contract": "piggyGame",
            "label": "season",
            "type": "t_uint16",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:103"
          },
          {
            "contract": "piggyGame",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:106"
          },
          {
            "contract": "piggyGame",
            "label": "fee",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:107"
          },
          {
            "contract": "piggyGame",
            "label": "devPool",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:110"
          },
          {
            "contract": "piggyGame",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:112"
          },
          {
            "contract": "piggyGame",
            "label": "feeDestination",
            "type": "t_address",
            "src": "..\\..\\..\\..\\..\\C\\Users\\moot\\projects\\VolumeWars\\contracts\\piggyGame.sol:114"
          }
        ],
        "types": {
          "t_contract(IRewardNFT)769": {
            "label": "contract IRewardNFT"
          },
          "t_contract(IUniswapV2Router02)7358": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(ChainlinkRequest)789_storage)": {
            "label": "mapping(bytes32 => struct piggyGame.ChainlinkRequest)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ChainlinkRequest)789_storage": {
            "label": "struct piggyGame.ChainlinkRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address"
              },
              {
                "label": "fulfilled",
                "type": "t_bool"
              },
              {
                "label": "grades",
                "type": "t_array(t_uint8)dyn_storage"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Player)819_storage)": {
            "label": "mapping(address => struct piggyGame.Player)"
          },
          "t_struct(Player)819_storage": {
            "label": "struct piggyGame.Player",
            "members": [
              {
                "label": "gamesPlayed",
                "type": "t_uint256"
              },
              {
                "label": "season",
                "type": "t_uint16"
              },
              {
                "label": "team",
                "type": "t_address"
              },
              {
                "label": "winsBeforeJoin",
                "type": "t_uint32"
              },
              {
                "label": "experience",
                "type": "t_uint256"
              },
              {
                "label": "boosterPacks",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "numBoosterPacks",
                "type": "t_uint256"
              },
              {
                "label": "unclaimedPacks",
                "type": "t_array(t_uint8)dyn_storage"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_struct(Team)831_storage)": {
            "label": "mapping(address => struct piggyGame.Team)"
          },
          "t_struct(Team)831_storage": {
            "label": "struct piggyGame.Team",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "wins",
                "type": "t_uint32"
              },
              {
                "label": "damagePoints",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint16,t_struct(RewardPool)856_storage)": {
            "label": "mapping(uint16 => struct piggyGame.RewardPool)"
          },
          "t_struct(RewardPool)856_storage": {
            "label": "struct piggyGame.RewardPool",
            "members": [
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "remainingClaims",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerNFT",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "nftsClaimed",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_struct(Thresholds)870_storage": {
            "label": "struct piggyGame.Thresholds",
            "members": [
              {
                "label": "grade1",
                "type": "t_uint256"
              },
              {
                "label": "grade2",
                "type": "t_uint256"
              },
              {
                "label": "grade3",
                "type": "t_uint256"
              },
              {
                "label": "grade4",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RareChance)880_storage": {
            "label": "struct piggyGame.RareChance",
            "members": [
              {
                "label": "grade2",
                "type": "t_uint8"
              },
              {
                "label": "grade3",
                "type": "t_uint8"
              },
              {
                "label": "grade4",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_contract(LinkTokenInterface)3356": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1451914f7fdc1d6925afd53b6abf818af53e41dbcbf52ca5575d425a4a4835f5": {
      "address": "0xcD5a809d62b0Af5c51C2Ce040eF8923faA695515",
      "txHash": "0xd39237b95726da9e0814c44189e76e6bafa029b4fabba054020cd0c939c66ec2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "LINK",
            "type": "t_contract(LinkTokenInterface)144",
            "src": "..\\project:\\contracts\\ProxySafeVRFConsumerBase.sol:87"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "..\\project:\\contracts\\ProxySafeVRFConsumerBase.sol:88"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "..\\project:\\contracts\\ProxySafeVRFConsumerBase.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rewardNFT",
            "type": "t_contract(IRewardNFT)4916",
            "src": "..\\project:\\contracts\\piggyGame.sol:25"
          },
          {
            "contract": "piggyGame",
            "label": "pancakeSwapRouter",
            "type": "t_contract(IUniswapV2Router02)4146",
            "src": "..\\project:\\contracts\\piggyGame.sol:28"
          },
          {
            "contract": "piggyGame",
            "label": "requests",
            "type": "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4936_storage)",
            "src": "..\\project:\\contracts\\piggyGame.sol:38"
          },
          {
            "contract": "piggyGame",
            "label": "players",
            "type": "t_mapping(t_address,t_struct(Player)4966_storage)",
            "src": "..\\project:\\contracts\\piggyGame.sol:56"
          },
          {
            "contract": "piggyGame",
            "label": "teams",
            "type": "t_mapping(t_address,t_struct(Team)4978_storage)",
            "src": "..\\project:\\contracts\\piggyGame.sol:65"
          },
          {
            "contract": "piggyGame",
            "label": "activeTeams",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\piggyGame.sol:67"
          },
          {
            "contract": "piggyGame",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\piggyGame.sol:70"
          },
          {
            "contract": "piggyGame",
            "label": "rewardPools",
            "type": "t_mapping(t_uint16,t_struct(RewardPool)5003_storage)",
            "src": "..\\project:\\contracts\\piggyGame.sol:80"
          },
          {
            "contract": "piggyGame",
            "label": "rewardThresholds",
            "type": "t_struct(Thresholds)5017_storage",
            "src": "..\\project:\\contracts\\piggyGame.sol:90"
          },
          {
            "contract": "piggyGame",
            "label": "rareChance",
            "type": "t_struct(RareChance)5027_storage",
            "src": "..\\project:\\contracts\\piggyGame.sol:97"
          },
          {
            "contract": "piggyGame",
            "label": "createdCards",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\project:\\contracts\\piggyGame.sol:99"
          },
          {
            "contract": "piggyGame",
            "label": "open",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\piggyGame.sol:101"
          },
          {
            "contract": "piggyGame",
            "label": "season",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\piggyGame.sol:103"
          },
          {
            "contract": "piggyGame",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "..\\project:\\contracts\\piggyGame.sol:106"
          },
          {
            "contract": "piggyGame",
            "label": "fee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\piggyGame.sol:107"
          },
          {
            "contract": "piggyGame",
            "label": "devPool",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\piggyGame.sol:110"
          },
          {
            "contract": "piggyGame",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\piggyGame.sol:112"
          },
          {
            "contract": "piggyGame",
            "label": "feeDestination",
            "type": "t_address",
            "src": "..\\project:\\contracts\\piggyGame.sol:114"
          }
        ],
        "types": {
          "t_contract(IRewardNFT)4916": {
            "label": "contract IRewardNFT"
          },
          "t_contract(IUniswapV2Router02)4146": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4936_storage)": {
            "label": "mapping(bytes32 => struct piggyGame.ChainlinkRequest)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ChainlinkRequest)4936_storage": {
            "label": "struct piggyGame.ChainlinkRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address"
              },
              {
                "label": "fulfilled",
                "type": "t_bool"
              },
              {
                "label": "grades",
                "type": "t_array(t_uint8)dyn_storage"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Player)4966_storage)": {
            "label": "mapping(address => struct piggyGame.Player)"
          },
          "t_struct(Player)4966_storage": {
            "label": "struct piggyGame.Player",
            "members": [
              {
                "label": "gamesPlayed",
                "type": "t_uint256"
              },
              {
                "label": "season",
                "type": "t_uint16"
              },
              {
                "label": "team",
                "type": "t_address"
              },
              {
                "label": "winsBeforeJoin",
                "type": "t_uint32"
              },
              {
                "label": "experience",
                "type": "t_uint256"
              },
              {
                "label": "boosterPacks",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "numBoosterPacks",
                "type": "t_uint256"
              },
              {
                "label": "unclaimedPacks",
                "type": "t_array(t_uint8)dyn_storage"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_struct(Team)4978_storage)": {
            "label": "mapping(address => struct piggyGame.Team)"
          },
          "t_struct(Team)4978_storage": {
            "label": "struct piggyGame.Team",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "wins",
                "type": "t_uint32"
              },
              {
                "label": "damagePoints",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint16,t_struct(RewardPool)5003_storage)": {
            "label": "mapping(uint16 => struct piggyGame.RewardPool)"
          },
          "t_struct(RewardPool)5003_storage": {
            "label": "struct piggyGame.RewardPool",
            "members": [
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "remainingClaims",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerNFT",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "nftsClaimed",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_struct(Thresholds)5017_storage": {
            "label": "struct piggyGame.Thresholds",
            "members": [
              {
                "label": "grade1",
                "type": "t_uint256"
              },
              {
                "label": "grade2",
                "type": "t_uint256"
              },
              {
                "label": "grade3",
                "type": "t_uint256"
              },
              {
                "label": "grade4",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RareChance)5027_storage": {
            "label": "struct piggyGame.RareChance",
            "members": [
              {
                "label": "grade2",
                "type": "t_uint8"
              },
              {
                "label": "grade3",
                "type": "t_uint8"
              },
              {
                "label": "grade4",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_contract(LinkTokenInterface)144": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9a0c101afe91b06ceb799d4bb25a61e784d973e1cf6009f5d1d00cd2502c0245": {
      "address": "0x047dF1968aFc92A1DCcD395751Aa30B56e9B0E02",
      "txHash": "0x562348e0b086be3a14668ebd461c02fe846b028e3ceb8268b41a3f1721f2be97",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "LINK",
            "type": "t_contract(LinkTokenInterface)144",
            "src": "..\\project:\\contracts\\ProxySafeVRFConsumerBase.sol:87"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "..\\project:\\contracts\\ProxySafeVRFConsumerBase.sol:88"
          },
          {
            "contract": "ProxySafeVRFConsumerBase",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "..\\project:\\contracts\\ProxySafeVRFConsumerBase.sol:93"
          },
          {
            "contract": "piggyGame",
            "label": "rewardNFT",
            "type": "t_contract(IRewardNFT)4916",
            "src": "..\\project:\\contracts\\piggyGame.sol:25"
          },
          {
            "contract": "piggyGame",
            "label": "pancakeSwapRouter",
            "type": "t_contract(IUniswapV2Router02)4146",
            "src": "..\\project:\\contracts\\piggyGame.sol:28"
          },
          {
            "contract": "piggyGame",
            "label": "requests",
            "type": "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4936_storage)",
            "src": "..\\project:\\contracts\\piggyGame.sol:38"
          },
          {
            "contract": "piggyGame",
            "label": "players",
            "type": "t_mapping(t_address,t_struct(Player)4966_storage)",
            "src": "..\\project:\\contracts\\piggyGame.sol:56"
          },
          {
            "contract": "piggyGame",
            "label": "teams",
            "type": "t_mapping(t_address,t_struct(Team)4978_storage)",
            "src": "..\\project:\\contracts\\piggyGame.sol:65"
          },
          {
            "contract": "piggyGame",
            "label": "activeTeams",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\piggyGame.sol:67"
          },
          {
            "contract": "piggyGame",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\piggyGame.sol:70"
          },
          {
            "contract": "piggyGame",
            "label": "rewardPools",
            "type": "t_mapping(t_uint16,t_struct(RewardPool)5003_storage)",
            "src": "..\\project:\\contracts\\piggyGame.sol:80"
          },
          {
            "contract": "piggyGame",
            "label": "rewardThresholds",
            "type": "t_struct(Thresholds)5017_storage",
            "src": "..\\project:\\contracts\\piggyGame.sol:90"
          },
          {
            "contract": "piggyGame",
            "label": "rareChance",
            "type": "t_struct(RareChance)5027_storage",
            "src": "..\\project:\\contracts\\piggyGame.sol:97"
          },
          {
            "contract": "piggyGame",
            "label": "createdCards",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\project:\\contracts\\piggyGame.sol:99"
          },
          {
            "contract": "piggyGame",
            "label": "open",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\piggyGame.sol:101"
          },
          {
            "contract": "piggyGame",
            "label": "season",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\piggyGame.sol:103"
          },
          {
            "contract": "piggyGame",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "..\\project:\\contracts\\piggyGame.sol:106"
          },
          {
            "contract": "piggyGame",
            "label": "fee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\piggyGame.sol:107"
          },
          {
            "contract": "piggyGame",
            "label": "devPool",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\piggyGame.sol:110"
          },
          {
            "contract": "piggyGame",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\piggyGame.sol:112"
          },
          {
            "contract": "piggyGame",
            "label": "feeDestination",
            "type": "t_address",
            "src": "..\\project:\\contracts\\piggyGame.sol:114"
          }
        ],
        "types": {
          "t_contract(IRewardNFT)4916": {
            "label": "contract IRewardNFT"
          },
          "t_contract(IUniswapV2Router02)4146": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(ChainlinkRequest)4936_storage)": {
            "label": "mapping(bytes32 => struct piggyGame.ChainlinkRequest)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ChainlinkRequest)4936_storage": {
            "label": "struct piggyGame.ChainlinkRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address"
              },
              {
                "label": "fulfilled",
                "type": "t_bool"
              },
              {
                "label": "grades",
                "type": "t_array(t_uint8)dyn_storage"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Player)4966_storage)": {
            "label": "mapping(address => struct piggyGame.Player)"
          },
          "t_struct(Player)4966_storage": {
            "label": "struct piggyGame.Player",
            "members": [
              {
                "label": "gamesPlayed",
                "type": "t_uint256"
              },
              {
                "label": "season",
                "type": "t_uint16"
              },
              {
                "label": "team",
                "type": "t_address"
              },
              {
                "label": "winsBeforeJoin",
                "type": "t_uint32"
              },
              {
                "label": "experience",
                "type": "t_uint256"
              },
              {
                "label": "boosterPacks",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "numBoosterPacks",
                "type": "t_uint256"
              },
              {
                "label": "unclaimedPacks",
                "type": "t_array(t_uint8)dyn_storage"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_struct(Team)4978_storage)": {
            "label": "mapping(address => struct piggyGame.Team)"
          },
          "t_struct(Team)4978_storage": {
            "label": "struct piggyGame.Team",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "wins",
                "type": "t_uint32"
              },
              {
                "label": "damagePoints",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint16,t_struct(RewardPool)5003_storage)": {
            "label": "mapping(uint16 => struct piggyGame.RewardPool)"
          },
          "t_struct(RewardPool)5003_storage": {
            "label": "struct piggyGame.RewardPool",
            "members": [
              {
                "label": "balance",
                "type": "t_uint256"
              },
              {
                "label": "remainingClaims",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerNFT",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "nftsClaimed",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_struct(Thresholds)5017_storage": {
            "label": "struct piggyGame.Thresholds",
            "members": [
              {
                "label": "grade1",
                "type": "t_uint256"
              },
              {
                "label": "grade2",
                "type": "t_uint256"
              },
              {
                "label": "grade3",
                "type": "t_uint256"
              },
              {
                "label": "grade4",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RareChance)5027_storage": {
            "label": "struct piggyGame.RareChance",
            "members": [
              {
                "label": "grade2",
                "type": "t_uint8"
              },
              {
                "label": "grade3",
                "type": "t_uint8"
              },
              {
                "label": "grade4",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_contract(LinkTokenInterface)144": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
